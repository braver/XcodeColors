{
    "name": "Xcode Default Dark",
    "author": "Koen Lageveen, inspired by Apple",
    "variables":
    {
        "yellow": "#D0BF69",
        "red": "#FC6A5D",
        "green": "#67B7A4",


        "plain_text"                    : "#FFFFFFD9",
        "comments"                      : "#6C7986",

        "documentation_markup"          : "#6C7986",
        "documentation_markup_keywords" : "#92A1B1",
        "marks"                         : "#92A1B1",

        "strings"                       : "#FC6A5D",
        "characters"                    : "#D0BF69",
        "numbers"                       : "#D0BF69",
        "keywords"                      : "#FC5FA3",

        "preprocessor_statements"       : "#FD8F3F",
        "urls"                          : "#5482FF",
        "attributes"                    : "#BF8555",

        "type_declarations"             : "#5DD8FF",
        "other_declarations"            : "#41A1C0",

        "project_class_names"           : "#9EF1DD",
        "project_method_names"          : "#67B7A4",
        "project_constants"             : "#67B7A4",
        "project_type_names"            : "#9EF1DD",
        "project_variables"             : "#67B7A4",
        "project_preprocessor_macros"   : "#FD8F3F",

        "other_class_names"             : "#D0A8FF",
        "other_method_names"            : "#A167E6",
        "other_constants"               : "#A167E6",
        "other_type_names"              : "#D0A8FF",
        "other_variables"               : "#A167E6",
        "other_preprocessor_macros"     : "#FD8F3F",

        "heading"                       : "#AA0D91",

        "background"                    : "#1F1F24",
        "current_line"                  : "#23252B",
        "selection"                     : "#515B70",
        "cursor"                        : "#FFFFFF",
        "invisibles"                    : "#424D5B",

        "embedded": "color(var(background) blend(var(invisibles) 86%))",
        "invalid": "var(strings)"
    },
    "globals":
    {
        "background": "var(background)",
        "foreground": "var(plain_text)",
        "line_highlight": "var(current_line)",
        "gutter": "var(background)",
        "minimap_border": "var(comments)",

        "caret": "var(cursor)",
        "block_caret": "var(cursor)",
        "invisibles": "var(invisibles)",
        "misspelling": "var(strings)",

        "highlight": "color(var(selection) lightness(+ 10%))",
        "find_highlight": "var(current_line)",
        "find_highlight_foreground": "var(plain_text)",

        "accent": "var(other_declarations)",
        "fold_marker": "var(yellow)",

        "guide": "color(var(project_variables) alpha(20%))",
        "active_guide": "color(var(project_variables) alpha(60%))",
        "stack_guide": "color(var(project_variables) alpha(40%))",

        "selection": "var(selection)",
        "selection_border": "color(var(selection) lightness(+ 10%))",
        "inactive_selection": "color(var(selection) alpha(50%))",

        "brackets_options": "underline",
        "brackets_foreground": "var(other_constants)",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "var(other_declarations)",
        "tags_options": "stippled_underline",
        "tags_foreground": "var(other_declarations)",

        "shadow": "color(#000 alpha(50%))",
        "shadow_width": "4",

        "line_diff_added" : "var(project_variables)",
        "line_diff_modified" : "var(yellow)",
        "line_diff_deleted" : "var(strings)"
    },
    "rules":
    [
        {
            "name": "Error",
            "scope": "markup.error",
            "foreground": "var(red)"
        },
        {
            "name": "Warning",
            "scope": "markup.warning",
            "foreground": "var(yellow)"
        },
        {
            "name": "Parameters",
            "scope": "variable.parameter",
            "foreground": "var(attributes)"
        },
        {
            "name": "Comments",
            "scope": "comment, punctuation.definition.comment",
            "foreground": "var(comments)"
        },
        {
            "name": "Punctuation",
            "scope": "punctuation.definition",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Operators",
            "scope": "keyword.operator",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Keywords",
            "scope": "keyword, keyword.operator.word",
            "foreground": "var(keywords)"
        },
        {
            "name": "Keywords",
            "scope": "keyword.control, keyword.control punctuation.definition",
            "foreground": "var(preprocessor_statements)"
        },
        {
            "name": "Variables",
            "scope": "variable",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Variable function",
            "scope": "variable.function",
            "foreground": "var(project_method_names)"
        },
        {
            "name": "Functions",
            "scope": "entity.name.function",
            "foreground": "var(project_method_names)"
        },
        {
            "name": "Classes",
            "scope": "entity.name - (entity.name.section | entity.name.tag | entity.name.label), variable.other.dollar.only.js",
            "foreground": "var(project_class_names)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(other_declarations)"
        },
        {
            "name": "Function Storage",
            "scope": "meta.function.declaration storage.type.function, storage.type.function keyword.declaration, storage.type.class keyword.declaration",
            "foreground": "var(other_declarations)"
        },
        {
            "name": "Support Functions",
            "scope": "support.function",
            "foreground": "var(other_method_names)"
        },
        {
            "name": "Method Call",
            "scope": "meta.method-call variable.function",
            "foreground": "var(other_method_names)"
        },
        {
            "name": "Method Call",
            "scope": "meta.method-call variable.function.member",
            "foreground": "var(other_preprocessor_macros)"
        },
        {
            "name": "Support Classes",
            "scope": "support.class",
            "foreground": "var(other_class_names)"
        },
        {
            "name": "Support Constants",
            "scope": "support.constant, constant.language",
            "foreground": "var(other_constants)",
            "font_style": "italic"
        },
        {
            "name": "CSS Support Constants",
            "scope": "source.css support.constant",
            "foreground": "var(preprocessor_statements)"
        },
        {
            "name": "Strings, Inherited Class",
            "scope": "string, entity.other.inherited-class",
            "foreground": "var(strings)"
        },
        {
            "name": "Strings Punctuation",
            "scope": "string punctuation.definition.string",
            "foreground": "var(strings)"
        },
        {
            "name": "Variables in Strings",
            "scope": "string variable",
            "foreground": "var(other_variables)"
        },
        {
            "name": "Misc Punctuation",
            "scope": "punctuation.separator, punctuation.terminator, punctuation.accessor",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Misc Punctuation",
            "scope": "punctuation.section",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Integers",
            "scope": "constant.numeric, constant.numeric punctuation.separator",
            "foreground": "var(numbers)"
        },
        {
            "name": "Constants",
            "scope": "constant",
            "foreground": "var(project_constants)"
        },
        {
            "name": "Tags",
            "scope": "entity.name.tag",
            "foreground": "var(project_class_names)"
        },
        {
            "name": "Attributes",
            "scope": "entity.other.attribute-name, entity.other.attribute-name punctuation.definition",
            "foreground": "var(project_method_names)"
        },
        {
            "name": "Types",
            "scope": "entity.name.type",
            "foreground": "var(project_type_names)"
        },
        {
            "name": "Types",
            "scope": "support.type",
            "foreground": "var(other_type_names)"
        },
        {
            "name": "Types",
            "scope": "entity.other support.type",
            "foreground": "var(preprocessor_statements)"
        },
        {
            "name": "Types",
            "scope": "entity.other.pseudo-element, entity.other.pseudo-element punctuation.definition, entity.other.pseudo-class, entity.other.pseudo-class punctuation.definition",
            "foreground": "var(preprocessor_statements)"
        },
        {
            "name": "Headings",
            "scope": "markup.heading",
            "foreground": "var(heading)",
            "font_style": "bold"
        },
        {
            "name": "Bold",
            "scope": "markup.bold",
            "font_style": "bold"
        },
        {
            "name": "Italic",
            "scope": "markup.italic",
            "font_style": "italic"
        },
        {
            "name": "Code",
            "scope": "markup.raw",
            "background": "var(embedded)"
        },
        {
            "name": "Code",
            "scope": "markup.raw.inline",
            "foreground": "var(preprocessor_statements)",
            "background": "var(embedded)"
        },
        {
            "name": "Strings Punctuation",
            "scope": "markup.raw.inline punctuation.definition.raw",
            "foreground": "var(characters)"
        },
        {
            "name": "Link Text",
            "scope": "string.other.link, markup.underline.link",
            "foreground": "var(urls)"
        },
        {
            "name": "Lists",
            "scope": "punctuation.definition.list_item, markup.list.numbered.bullet",
            "foreground": "var(documentation_markup)"
        },
        {
            "name": "Quotes",
            "scope": "punctuation.definition.blockquote",
            "background": "var(invisibles)"
        },
        {
            "name": "Link/Image Punctuation",
            "scope": "punctuation.definition.image, punctuation.definition.link, punctuation.definition.metadata",
            "foreground": "var(urls)"
        },
        {
            "name": "Inserted",
            "scope": "markup.inserted",
            "foreground": "var(green)"
        },
        {
            "name": "Deleted",
            "scope": "markup.deleted",
            "foreground": "var(red)"
        },
        {
            "name": "Changed",
            "scope": "markup.changed",
            "foreground": "var(yellow)"
        },
        {
            "name": "Colors",
            "scope": "constant.other.color, constant.other.color punctuation.definition",
            "foreground": "var(characters)"
        },
        {
            "name": "Regular Expressions",
            "scope": "string.regexp",
            "foreground": "var(characters)"
        },
        {
            "name": "Regular Expressions Operator",
            "scope": "string.regexp keyword.operator",
            "foreground": "var(plain_text)"
        },
        {
            "name": "Escape Characters",
            "scope": "constant.character.escape",
            "foreground": "var(other_preprocessor_macros)"
        },
        {
            "name": "YAML String",
            "scope": "source.yaml string.unquoted",
            "foreground": "var(strings)"
        },
        {
            "name": "Embedded Variable",
            "scope": "variable.interpolation",
            "foreground": "var(other_variables)"
        },
        {
            "name": "Illegal",
            "scope": "invalid.illegal",
            "foreground": "var(invalid)",
            "background": "color(var(invalid) blend(var(background) 50%))"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "var(invalid)",
            "background": "color(var(invalid) blend(var(background) 50%))"
        },
        {
            "name": "Markdown Line Break",
            "scope": "punctuation.definition.hard-line-break",
            "background": "var(invisibles)"
        }
    ]
}
